name: Poll YouTube for Live Streams

on:
  schedule:
    - cron: '10 8-20 * * *'  # At the start of every hour from 8am to 8pm
    - cron: '25 8-20 * * *'  # At 15 minutes past every hour from 8am to 8pm
    - cron: '40 8-20 * * *'  # At 30 minutes past every hour from 8am to 8pm
    - cron: '55 8-20 * * *'  # At 45 minutes past every hour from 8am to 8pm
    - cron: '5,15,20,30,35,45,50 9 * * *'  # Check more frequently 10-11am BST
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: write
  pull-requests: none
  actions: write

jobs:
  poll-youtube:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true
  
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version-file: "pyproject.toml"
  
    - name: Install dependencies
      run: uv sync --all-extras --dev
    
    - name: Update streams
      id: update
      env:
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
      run: |
        # Run the script and capture its output
        output=$(uv run script/update_streams.py)
        echo "$output"
        # Extract the variables from the output
        echo "has_changes=true" >> $GITHUB_OUTPUT

    - name: Commit and push if changed
      if: steps.update.outputs.has_changes == 'true'
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add public/data/streams.json
        git commit -m "Update streams data"
        git push

    - name: Trigger deploy workflow
      if: steps.update.outputs.has_changes == 'true'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          await github.rest.actions.createWorkflowDispatch({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'deploy.yml',
            ref: 'main'
          })
